const util = require('../../cli/lib/util')
const fs = require('fs')

;(async () => {
  // 23-08 I made the scan dir general enough to handle all desired cases so far
  console.log('test')
  const res = await util.scanMusicDir(process.env.DIR)
  console.log('scan res', res, res.data?.CDR?.album)
  const xml = generatePlaylist(res.data)
  fs.writeFileSync('./playlist.xspf', xml, {encoding:'utf-8'})
})()

function generatePlaylist(data) {
  let trackCount = 0
  let xml = `
<?xml version="1.0" encoding="UTF-8"?>
<playlist xmlns="http://xspf.org/ns/0/" xmlns:vlc="http://www.videolan.org/vlc/playlist/ns/0/" version="1">
  <title>Playlist</title>
  <trackList>`
  for (let label in data) {
    for (let album in data[label].album) {
      for (let track in data[label].album[album].track) {
        // loop city
        if (!data[label].album[album].cover) {
          throw Error(`album '${album}' has no cover. TODO: check this in the friggen scan dir tool for butt sake`)
        }
        xml += `
    <track>
      <location>file:///${vlcEncodePath(data[label].album[album].track[track].path)}</location>
      <title>${track}</title>
      <creator>${label}</creator>
      <album>${album}</album>
      <trackNum>${trackCount}</trackNum>
      <annotation>AUTO GENERATED BY SHITSTANK INCORPORATED</annotation>
      <image>file:///${vlcEncodePath(data[label].album[album].cover)}</image>
      <duration>${trackCount}</duration>
      <extension application="http://www.videolan.org/vlc/playlist/0">
        <vlc:id>${trackCount}</vlc:id>
      </extension>
    </track>`
        trackCount += 1
      }
    }
  }
  xml += `
  </trackList>
  <extension application="http://www.videolan.org/vlc/playlist/0">`
  for (let i = 0; i < trackCount; i++) {
    xml += `
    <vlc:item tid="${i}"/>`
  }
  xml += `
  </extension>
</playlist>
  `

  return xml
}

// even though im exempting slashes from being encoded, I think this method still
// encodes too much. I think we just need to convert whitespace to %20
function vlcEncodePath(string) {
  //console.log('path to be processed', string)
  const divider = string.startsWith('/') ? '/' : '\\'
  const arr = string.split(divider)
  for (let i = 1; i < arr.length; i++) {
    if (arr[i]) arr[i] = encodeURIComponent(arr[i])
  }
  //console.log(arr)
  return arr.join(divider)
}